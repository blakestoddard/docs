# Manual SSO Setup with GraphQL

- can self-serve your SSO setup with Buildkite using GraphQL
- follow the steps below to enable sso for your org
- set up Buildkite in your identity provider, guides available for x x and x

## How to enable SSO for your Org

- you need the service URL from Buildkite before you can finish setting up things in your identity provider

- overview: set up a blank SSO provider in Buildkite, do the set up in your SSO provider, come back and update your blank Buildkite SSO to contain the details of your provider
- the set up on the Buildkite side is done via a series of graphql operations
- this guide isn't an api reference and so won't cover every available option
- if you haven't used our graphql explorer before, check out our [api guide](http://buildkite.localhost/docs/graphql-api#getting-started)

### Get your internal Organization ID

- to set up your organisation for SSO, you need your internal Buildkite id
- use the get method with your org slug to retrieve your org id
- this id will be required in all other sso methods

For example, the following code will retrieve any SSO providers that have been created for the organisation `Acme-Inc`:

```graphql
query GetProviders {
  organization(slug:"acme-inc"){
    id
    ssoProviders(first: 50) {
      edges {
        node {
          id
          url
        }
      }
    }
  }
}
```

### Create your SSO provider

- use the create method to create a blank 
- after you set up your id provider, you will come back and fill in the provider details using the update method
- use the org id you retreived from the GET method 

The following example code creates a blank SSO provider:

```graphql
mutation MakeBlankProvider {
  ssoProviderCreate(input:{
    organizationId:"<paste your organization id here>",
    type:SAML
  }) {
    ssoProvider {
      id
      type
      ...on SSOProviderSAML {
        serviceProvider {
          issuer
          ssoURL
          metadata {
            url
          }
        }
      }
    }
  }
}
```

- can choose from three different provider types: `SAML`, `GOOGLE_OAUTH`, and `GITHUB_OAUTH`

SAML:
- if you haven't set up your identity provider with buildkite, do that before continuing
- if you've already set up your identity provider, see [the examples below](#create-a-saml-provider-with-data) for code to create your identity provider with data

Google_oauth:
- add the two required fields for google authentication:
    - googleHostedDomain: the domain your team uses with Google G Suite as a string
    - discloseGoogleHostedDomain: a boolean describing whether or not you'd like your domain name to be listed on the authentication page 

```graphql
mutation CreateGoogleProvider {
  ssoProviderCreate(input:{
    organizationId:"<paste your organization id here>",
    type:GOOGLE_OAUTH,
    googleHostedDomain:"coffee.com",
    discloseGoogleHostedDomain: false
  }) {
    ssoProvider {
      id
      url
      ...on SSOProviderGoogleOAuth {
        googleHostedDomain
        discloseGoogleHostedDomain
      }
    }
  }
}
```

github_oauth:
- add your github organisation name:
    - githuborganisationname: 'test'

```graphql
mutation CreateGitHubProvider {
  ssoProviderCreate(input:{
    organizationId:"<paste your organization id here>",
    type:GITHUB_OAUTH,
    githubOrganizationName:"buildkite"
  }) {
    ssoProvider {
      id
      url
      ...on SSOProviderGithubOAuth {
        githubOrganizationName
      }
    }
  }
}
```

- test the login flow, ensure that a user can successfully complete the new authentication and gain access to your buildkite organisation before continuing
- the enable method will error if a successful test hasn't occurred

### Enable the provider for your organisation

- after testing that the new authorisation url works and can log in a user with the correct email domain, you can enable the sso provider for your buildkite organisation
- use the enable method with your provider id, you can retrieve this using the get mutation 

```graphql
mutation EnableProvider {
  ssoProviderEnable(
    input:{
      id:"<paste your provider id here>"
    }
  ) {
    ssoProvider {
      state
    }
  }
}

```

- check that it's enabled with the get method

### Update your provider data

- use this if you've made a blank sso provider and need to add your provider information to it
- also can be used to update your provider data if it changes

```graphql
mutation UpdateProvider {
  ssoProviderUpdate(input:{
    id:"<paste your provider id here>",
    identityProvider:{
      metadata:{
        url:"https://dev-242943.oktapreview.com/app/exkfs9l426YMuKPnM0h7/sso/saml/metadata"
      }
    }
  }) {
    ssoProvider {
      ...on SSOProviderSAML {
        identityProvider {
          issuer
          certificate
          ssoURL
          metadata {
            xml
            url
          }
        }
      }
    }
  }
}

```

- can't do an update while the provider is enabled, need to disable it, make your changes, then re-test and re-enable it once it's all working


## Advanced options

- you don't need to set up a blank one if you already have your ID prov. information
- set up your identity provider, set up your SSO in Buildkite with the details, go back to your identity provider and add the service url 

- can have as many different providers enabled at the same time as you need, they will all be displayed to users before they go through the authorisation flow

- can add a note to each provider login option in this list, to provide information to your users about each one 
- can also set session duration
- note and sessionduration can both be set on create and update
- use the `note` field and `sessionDurationInHours` field respectively, both of which are top level attributes under the input object in the ssoprovidercreate and ssoproviderupdate mutations

In the following example code, an existing identity provider is specified with the id field, and its note and session duration properties are updated:

```graphql
ssoProviderUpdate(input:{
  id:"<paste your provider id here>",
  note: ":ruby: Ruby team, please sign in here"
  sessionDurationInHours: 72
})
```

- full API documentation for the GraphQL SSO operations can be found in the GraphQL explorer
- generate an API token from your personal settings page that has access to the graphql beta, and use that to log in to the graphql explorer
- docs can be found in the top right corner, and are searchable

## Other operations

### Create a SAML provider with data

- instead of using the create method alone, you can add your data to it immediately
- use the create method
- there are three data entry options: static data entry, xml blob, and xml url

static data options:
- identity provider (ssoURL and issuer and certificate)

```graphql
ssoProviderCreate(input:{
  organizationId:"<paste your organization id here>",
  type:SAML,
  identityProvider:{
    ssoURL:"https://okta.com/111111111",
    issuer: "https://okta.com/aaaaaaaaa",
    certificate:"---BEGIN CERT---zga9d6fa98f7sa987d9829h"
  }
})
```

xml blob options:
- identity provider (metadata > xml)

```graphql
ssoProviderCreate(input:{
  organizationId:"<paste your organization id here>",
  type:SAML,
  identityProvider:{
    metadata:{
      xml: "..."
    }
  }
})
```

xml url options:
- identity provider (metadata > url)

```graphql
ssoProviderCreate(input:{
  organizationId:"<paste your organization id here>",
  type:SAML,
  identityProvider:{
    metadata:{
      url:"..."
    }
  }
})
```

### Disable a provider

- use the disable method, optionally with a reason for doing so

```graphql
ssoProviderDisable(input:{
  id:"<paste your provider id here>",
  disabledReason: "Updating to the new account"
})
```

### Delete a provider

- use the delete method
- deleting the provider with graphql means that there will be no confirmation dialog or anything else when you perform the delete
- please ensure that you've entered the correct provider id and that you want to delete it rather than disabling it
- all users will go back to logging in with their buildkite username and password
```graphql
ssoProviderDelete(input:{
  id:"<paste your provider id here>"
})
```




